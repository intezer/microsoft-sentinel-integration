{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "LogicAppsCategory": "security"
            }
        },
        "SubmitAlertTriggeredByIncidentCreatedPlaybookName": {
            "defaultValue": "Submit-IntezerAlert-IncidentTriggered",
            "type": "string"
        },
        "KeyvaultName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Vault containing intezer API key as secret intezer-sentinel-api-key"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "AlertAzureSentinelConnectionName": "azuresentinel-intezer-connection",
        "AlertKeyvaultConnectionName": "keyvault-intezer-connection"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AlertAzureSentinelConnectionName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AlertKeyvaultConnectionName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('KeyvaultName')]"
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/keyvault')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('SubmitAlertTriggeredByIncidentCreatedPlaybookName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AlertAzureSentinelConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }

                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Terminate": {
                                    "inputs": {
                                        "runStatus": "Cancelled"
                                    },
                                    "runAfter": {},
                                    "type": "Terminate"
                                }
                            },
                            "else": {
                                "actions": {
                                    "Condition_2": {
                                        "actions": {
                                            "Terminate_2": {
                                                "inputs": {
                                                    "runError": {
                                                        "code": "@{outputs('HTTP_-_Submit_alert')['statusCode']}",
                                                        "message": "@{body('HTTP_-_Submit_alert')}"
                                                    },
                                                    "runStatus": "Failed"
                                                },
                                                "runAfter": {},
                                                "type": "Terminate"
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "greaterOrEquals": [
                                                        "@outputs('HTTP_-_Submit_alert')['statusCode']",
                                                        400
                                                    ]
                                                }
                                            ]
                                        },
                                        "runAfter": {},
                                        "type": "If"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@outputs('HTTP_-_Submit_alert')['statusCode']",
                                            409
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "HTTP_-_Submit_alert": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "If"
                        },
                        "Get_secret": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('intezer-sentinel-api-key')}/value"
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                        },
                        "HTTP_-_Get_access_token": {
                            "inputs": {
                                "body": {
                                    "api_key": "@body('Get_secret')?['value']"
                                },
                                "method": "POST",
                                "uri": "https://analyze.intezer.com/api/v2-0/get-access-token"
                            },
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "HTTP_-_Submit_alert": {
                            "inputs": {
                                "body": {
                                    "alert": "@triggerBody()",
                                    "alert_source": "microsoft_sentinel"
                                },
                                "headers": {
                                    "Authorization": "Bearer @{body('Parse_JSON_-_Extract_access_token_from_response')?['result']}"
                                },
                                "method": "POST",
                                "uri": "https://analyze.intezer.com/api/v2-0/alerts/ingest"
                            },
                            "runAfter": {
                                "Parse_JSON_-_Extract_access_token_from_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Parse_JSON_-_Extract_access_token_from_response": {
                            "inputs": {
                                "content": "@body('HTTP_-_Get_access_token')",
                                "schema": {
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "HTTP_-_Get_access_token": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs"
                                    ]
                                }
                            },
                            "type": "ParseJson"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AlertAzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AlertAzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AlertKeyvaultConnectionName'))]",
                                "connectionName": "[variables('AlertKeyvaultConnectionName')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/keyvault')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}