{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "LogicAppsCategory": "security"
            }
        },
        "logicAppWorkspace": {
            "type": "string",
            "metadata": {
              "description": "Name of the existing Log Analytics workspace that the Logic App should connect to. Note that the Logic App connects to a single workspace, but can query data across multiple workspaces. Use the 'Workspaces To Query' parameter to specify the list of workspaces that the Logic App should query data from."
            }
        },
        "logicAppWorkspaceId": {
            "type": "string",
            "metadata": {
              "description": "Id of the existing Log Analytics workspace that the Logic App should connect to."
            }
        },
        "UpdateIncidentTriggeredByIncidentCreatedPlaybookName": {
            "defaultValue": "UpdateIncident-IntezerAlert-Webhook",
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "AlertAzureSentinelConnectionName": "azuresentinel-intezer-connection",
        "LogsMonitorConnectionName": "matan-test-1-monitorlogs-intezer-connection"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AlertAzureSentinelConnectionName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('LogsMonitorConnectionName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
              "api": {
                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azuremonitorlogs')]"
              },
              "displayName": "azuremonitorlogs"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('UpdateIncidentTriggeredByIncidentCreatedPlaybookName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AlertAzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('LogsMonitorConnectionName'))]"
            ],
            "properties": {
            "state": "Enabled",
            "definition": {
                "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                "actions": {
                    "Condition_-_is_msd_alert": {
                        "actions": {
                            "Add_comment_to_incident_-_msd_source": {
                                "inputs": {
                                    "body": {
                                        "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                        "message": "<p>@{body('Parse_JSON')?['note']}</p>"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/Incidents/Comment"
                                },
                                "runAfter": {
                                    "Alert_-_Get_incident": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            },
                            "Alert_-_Get_incident": {
                                "inputs": {
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                        }
                                    },
                                    "method": "get",
                                    "path": "/Incidents/subscriptions/@{encodeURIComponent(parameters('$workspaceSubscriptionId')['workspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(parameters('$resourceGroupName')['resourceGroupName'])}/workspaces/@{encodeURIComponent(parameters('$resourceWorkspaceId')['resourceWorkspaceId'])}/alerts/@{encodeURIComponent(body('Parse_JSON_-_found_alert')?['SystemAlertId'])}"
                                },
                                "runAfter": {
                                    "Parse_JSON_-_found_alert": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            },
                            "Condition_-_result_found": {
                                "actions": {
                                    "Terminate_-_no_alert_found": {
                                        "inputs": {
                                            "runStatus": "Cancelled"
                                        },
                                        "type": "Terminate"
                                    }
                                },
                                "else": {
                                    "actions": {}
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "equals": [
                                                "@length(body('Run_query_and_list_results')?['value'])",
                                                0
                                            ]
                                        }
                                    ]
                                },
                                "runAfter": {
                                    "Run_query_and_list_results": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "If"
                            },
                            "Delay": {
                                "inputs": {
                                    "interval": {
                                        "count": 15,
                                        "unit": "Minute"
                                    }
                                },
                                "type": "Wait"
                            },
                            "Parse_JSON_-_found_alert": {
                                "inputs": {
                                    "content": "@first(body('Run_query_and_list_results')?['value'])",
                                    "schema": {
                                        "properties": {
                                            "SystemAlertId": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "runAfter": {
                                    "Condition_-_result_found": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ParseJson"
                            },
                            "Run_query_and_list_results": {
                                "inputs": {
                                    "body": "SecurityAlert\n| summarize arg_max(TimeGenerated, *) by SystemAlertId\n| where VendorOriginalId in(\"@{body('Parse_JSON')?['microsoft_sentinel_incident_id']}\")",
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/queryData",
                                    "queries": {
                                        "resourcegroups": "@{parameters('$resourceGroupName')['resourceGroupName']}",
                                        "resourcename": "@{parameters('$resourceWorkspaceName')['resourceWorkspaceName']}",
                                        "resourcetype": "Log Analytics Workspace",
                                        "subscriptions": "@{parameters('$workspaceSubscriptionId')['workspaceSubscriptionId']}",
                                        "timerange": "Last 30 days"
                                    }
                                },
                                "runAfter": {
                                    "Delay": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            },
                            "Terminate_if_more_than_100_notes_-_msd": {
                                "inputs": {
                                    "runStatus": "Cancelled"
                                },
                                "runAfter": {
                                    "Add_comment_to_incident_-_msd_source": [
                                        "Failed"
                                    ]
                                },
                                "type": "Terminate"
                            }
                        },
                        "description": "",
                        "else": {
                            "actions": {
                                "Add_comment_to_incident__-_non-msd_source": {
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@body('Get_incident')?['id']",
                                            "message": "<p>@{body('Parse_JSON')?['note']}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    },
                                    "runAfter": {
                                        "Get_incident": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "Get_incident": {
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@body('Parse_JSON')?['microsoft_sentinel_incident_id']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents"
                                    },
                                    "type": "ApiConnection"
                                },
                                "Terminate_if_more_than_100_notes_-_non-msd": {
                                    "inputs": {
                                        "runStatus": "Cancelled"
                                    },
                                    "runAfter": {
                                        "Add_comment_to_incident__-_non-msd_source": [
                                            "Failed"
                                        ]
                                    },
                                    "type": "Terminate"
                                }
                            }
                        },
                        "expression": {
                            "and": [
                                {
                                    "equals": [
                                        "@body('Parse_JSON')?['source']",
                                        "msd"
                                    ]
                                }
                            ]
                        },
                        "runAfter": {
                            "Parse_JSON": [
                                "Succeeded"
                            ]
                        },
                        "type": "If"
                    },
                    "Parse_JSON": {
                        "inputs": {
                            "content": "@triggerBody()",
                            "schema": {
                                "properties": {
                                    "alert": {
                                        "properties": {
                                            "alert_id": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "intezer_alert_url": {
                                        "type": "string"
                                    },
                                    "microsoft_sentinel_incident_id": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "source": {
                                        "type": "string"
                                    },
                                    "triage_result": {
                                        "properties": {
                                            "alert_verdict_display": {
                                                "type": "string"
                                            },
                                            "risk_category_display": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "runAfter": {},
                        "type": "ParseJson"
                    }
                },
                "contentVersion": "1.0.0.0",
                "outputs": {},
                "parameters": {
                    "$connections": {
                        "defaultValue": {},
                        "type": "Object"
                    },
                    "$resourceGroupName": {
                        "defaultValue": {},
                        "type": "Object"
                    },
                    "$resourceWorkspaceId": {
                        "defaultValue": {},
                        "type": "Object"
                    },
                    "$resourceWorkspaceName": {
                        "defaultValue": {},
                        "type": "Object"
                    },
                    "$workspaceSubscriptionId": {
                        "defaultValue": {},
                        "type": "Object"
                    }
                },
                "triggers": {
                    "manual": {
                        "inputs": {
                            "schema": {}
                        },
                        "kind": "Http",
                        "type": "Request"
                    }
                }
            },
                "parameters": {
                    "$workspaceSubscriptionId": {
                        "value": {
                            "workspaceSubscriptionId": "[subscription().subscriptionId]"
                        }
                    },
                    "$resourceGroupName": {
                        "value": {
                            "resourceGroupName": "[resourceGroup().name]"
                        }
                    },
                    "$resourceWorkspaceId": {
                        "value": {
                            "resourceWorkspaceId": "[parameters('logicAppWorkspaceId')]"
                        }
                    },
                    "$resourceWorkspaceName": {
                        "value": {
                            "resourceWorkspaceName": "[parameters('logicAppWorkspace')]"
                        }
                    },
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AlertAzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AlertAzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('LogsMonitorConnectionName'))]",
                                "connectionName": "[variables('LogsMonitorConnectionName')]",
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azuremonitorlogs')]",
                                 "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                              }
                        }
                    }
                }
            }
        }
    ]
}